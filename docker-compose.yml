version: '3.8'

services:
  financial-analyst:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: financial-analyst-app
    ports:
      - "8501:8501"
    environment:
      # OpenAI API Key
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      
      # OpenBB API Key
      - OPENBB_PAT=${OPENBB_PAT}
      
      # Marketaux API Key
      - MARKETAUX_API_KEY=${MARKETAUX_API_KEY}
      
      # Database configuration
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      
      # Email configuration
      - EMAIL_SENDER=${EMAIL_SENDER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      
      # Session secret
      - SESSION_SECRET=${SESSION_SECRET}
    volumes:
      # Mount logs directory to persist logs
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - financial-analyst-network

  # Optional: Newsletter scheduler service
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: financial-analyst-scheduler
    environment:
      # Same environment variables as above
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENBB_PAT=${OPENBB_PAT}
      - MARKETAUX_API_KEY=${MARKETAUX_API_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - EMAIL_SENDER=${EMAIL_SENDER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
    command: ["python", "scheduler.py"]
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      - financial-analyst
    networks:
      - financial-analyst-network

networks:
  financial-analyst-network:
    driver: bridge

volumes:
  logs:
