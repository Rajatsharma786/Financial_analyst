# Dockerfile for FastAPI Newsletter Scheduler Service
# Multi-stage build for optimized image size
FROM python:3.11-slim as builder

# Set working directory
WORKDIR /app

# Install system dependencies required for building Python packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy only requirements first to leverage Docker cache
COPY requirements.txt .

# Create virtual environment and install dependencies
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Pre-build openbb extensions to avoid runtime issues
RUN python -c "import openbb; print('OpenBB initialized successfully')" || true

# Stage 2: Runtime stage
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install runtime dependencies only
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq5 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy virtual environment from builder stage
COPY --from=builder /opt/venv /opt/venv

# Set environment variables
ENV PATH="/opt/venv/bin:$PATH" \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    OPENBB_DISABLE_AUTO_BUILD=true \
    OPENBB_DISABLE_INTERACTIVE=true

# Create non-root user and set up permissions
RUN useradd -m -u 1000 appuser && \
    mkdir -p /home/appuser/.openbb && \
    chown -R appuser:appuser /app && \
    chown -R appuser:appuser /opt/venv && \
    chown -R appuser:appuser /home/appuser

# Copy application files
# Need all dependencies that email_util.py requires
COPY --chown=appuser:appuser scheduler.py .
COPY --chown=appuser:appuser email_util.py .
COPY --chown=appuser:appuser auth.py .
COPY --chown=appuser:appuser app.py .
COPY --chown=appuser:appuser user_profile.py .

# Switch to non-root user
USER appuser

# Expose FastAPI port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run FastAPI scheduler
CMD ["uvicorn", "scheduler:app", "--host", "0.0.0.0", "--port", "8000", "--log-level", "info"]
